#include <iostream>
using namespace std;
#define size 10

class stackexp
{
    int top;
    char stk[size];
public:
    stackexp()
    {
     top=-1;
    }
    void push(char);
    char pop();
    int isfull();
    int isempty();
};

void stackexp::push(char x)
{
    top=top+1;
    stk[top]=x;
}

char stackexp::pop()
{
    char s;
    s=stk[top];
    top=top-1;
    return s;
}

int stackexp::isfull()
{
    if(top==size)
        return 1;
    else
        return 0;
}

int stackexp::isempty()
{
    if(top==-1)
        return 1;
    else
        return 0;
}

int main()
{
    stackexp s1;
    char exp[20],ch;
    int i=0;
    cout << "\n\t!! Parenthesis Checker..!!!!" << endl; // prints !!!Hello World!!!
    cout<<"\nEnter the expression to check whether it is in well form or not :  ";
    cin>>exp;
    if((exp[0]==')')||(exp[0]==']')||(exp[0]=='}'))
    {
        cout<<"\n Invalid Expression.....\n";
        return 0;
    }
    else
    {
        while(exp[i]!='\0')
        {
            ch=exp[i];
            switch(ch)
            {
            case '(':s1.push(ch);break;
            case '[':s1.push(ch);break;
            case '{':s1.push(ch);break;
            case ')':s1.pop();break;
            case ']':s1.pop();break;
            case '}':s1.pop();break;
            }
            i=i+1;
        }
    }
    if(s1.isempty())
    {
        cout<<"\nExpression is well parenthesised...\n";
    }
    else
    {
        cout<<"\nSorry !!! Invalid Expression or not in well parenthesized....\n";
    }
    return 0;
}


/*OUTPUT:

      !! Parenthesis Checker..!!!!

Enter the expression to check whether it is in well form or not :  {a+b}

Expression is well parenthesised...

--------------------------------
Process exited after 7.083 seconds with return value 0
Press any key to continue . . .


        !! Parenthesis Checker..!!!!

Enter the expression to check whether it is in well form or not :  {a+b{

Sorry !!! Invalid Expression or not in well parenthesized....

--------------------------------
Process exited after 8.827 seconds with return value 0
Press any key to continue . . .

algo for insertion in stack
STEP 1 START.
STEP 2 Store the element to push into array.
STEP 3 Check if top== (MAXSIZE-1) then stack is full else goto step 4.
STEP 4 Increment top as top = top+1.
STEP 5 Add element to the position stk[top]=num.
STEP 6 STOP.

algo for deletion in stack
Step 1 : If top = Null. Then print “UNDERFLOW” and return 
Step 2 : Set item=Stack[top] 
Step 3 : Set top = top -1 
Step 4: stop

g++ --version  //check for g++ compiler
sudo apt install build-essential //to install compiler

pwd  //to show default directory
cd Desktop/  //to change directory
touch hello.cpp  //to create cpp file
g++ hello.cpp   //to compile
./a.out  //to open output file created on desktop

g++ hello.cpp -o output //to compile and create own output file*/